# Indicates the file format version
version: "3.8"

# Services: They define each microservice container

services:
# Let's create the Frontend micro service

# The name of the container for frontend
  vincent-yolo-client:
    image: vokemwa/vincent-yolo-client:v1.0.0              # represents docker username, image name and image tag
    build: ./client                                        # Instructs Docker to build the image from ./client directory that contains the Dockerfile for the frontend
    container_name: vincent-yolo-client                    # A custom name to the frontend container
    stdin_open: true                                       # keeps the standard input open to enable interractive mode of the container. This is helpul for debugging
    tty: true                                              # Allows the container behave like it has a real terminal
    ports:
      - "3000:3000"                                        # This maps the host port 3000 to container port which by default is 3000 for react
    depends_on:
      - vincent-yolo-backend                               # This container waits for the backend container to start before starting
    networks:
      - vincent-network                                    # Connects this container to a shared network called vincent-network

# Let's create the Backend micro service

# The name of the container for backend service.
  vincent-yolo-backend:                                    # This service represents a container that runs the backend nodeJS app
    image: vokemwa/vincent-yolo-backend:v1.0.0             # Name and Tag of the docker image i.e. docker username, image name and image tag
    build: ./backend                                       # Instructs Docker Compose to build a docker image using docker file in the backend directory
    container_name: vincent-yolo-backend                   # Represents the name of the container
    stdin_open: true                                       # keeps the standard input open to enable interractive mode of the container. This is helpul for debugging
    tty: true                                              # Allows the container behave like it has a real terminal
    restart: always                                        # Docker compose will restart the container if it crashes or the system reboots
    ports:
      - "5000:5000"                                        # Mapping of host port 5000 to container port 5000. Therefore your backend app will be accessible on http://localhost:5000
    depends_on:
      - vincent-app-ip-mongo                               # Ensures that the mongoDB service starts before the backend service
    networks:
      - vincent-network                                    # Connects this container to a shared network called vincent-network


# Mongo DB micro service
# The service creates a container for MongoDB
  vincent-app-ip-mongo:                                    # The service creates a container for MongoDB
    image: mongo:4.4                                          # This is an official mongo db Docker image
    container_name: vincent-mongo                          # Gives a unique name to the mongo db container instead of the default
    ports:
      - "27017:27017"                                      # This maps the port 27017 which is the default mongoDB port from your host machine to the container. Mongo db will be accessible on localhost:27017 from the local computer
    networks:
      - vincent-network                                    # Connects this container to a shared network called vincent-network. This allows inter-service 
    volumes:
      - type: volume                                       # This specifies the type of mount i.e. a named volume that is managed by Docker
        source: vincent-mongo-data                         # This creates the name of the docker volume which helps in tracking the volume
        target: /data/db                                   # Actually, this is the default directory where MongoDB stores all its data inside the container. This directory will be redirected to a persistent external volume called "vincent-mongo-data"

# Network Infrastructure
networks:
  vincent-network:                                          # This is the actual network name to be used by docker when creating the network 
    driver: bridge                                          # Creates a network driver for doker. And it's the default
    attachable: true                                        # This allows other containers that are not specified in the docker-compose file to join the network.

# Docker volume
volumes:
  vincent-mongo-data:                                       # volume name
    driver: local                                           # Docker will store the data locally